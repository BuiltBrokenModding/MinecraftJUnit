buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.ajoberstar:gradle-git:0.10.1'
    }
}

plugins {
  //applies CurseGradle plugin for uploading to CurseForge
  id "com.matthewprenger.cursegradle" version "1.0.9"
  id 'net.saliman.cobertura' version '2.2.5'
  id 'com.github.kt3k.coveralls' version '2.0.1'
  //id "com.github.johnrengelman.shadow" version "1.2.2"
  //Applies the changelog plugin
  id "se.bjurr.gitchangelog.git-changelog-gradle-plugin" version "1.50"
}

apply from: 'https://raw.githubusercontent.com/BuiltBrokenModding/BuiltBrokenScripts/1.12/index/index.gradle'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'jacoco'

dependencies 
{
    compile 'junit:junit:4.11'
    compile "com.builtbroken.codinglib:CodingLib:0.0.3b26:deobf"
    testRuntime 'org.slf4j:slf4j-simple:1.7.10'
}

def currentJvm = org.gradle.internal.jvm.Jvm.current()

import org.ajoberstar.grgit.Grgit

def gitHash = 'unknown'
if (new File(projectDir, '.git').exists()) {
    def repo = Grgit.open(project.file('.'))
    gitHash = repo.log().find().abbreviatedId
}

jar { 
    manifest.mainAttributes(
            "Built-By": System.getProperty('user.name'),
            "Created-By": currentJvm,
            "Implementation-Title": archivesBaseName,
            "Implementation-Version": project.version,
            "Git-Hash": gitHash,
    )
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}